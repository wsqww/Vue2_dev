{"version":3,"sources":["webpack:///./src/utils/modbus-command/crc16.js","webpack:///./node_modules/base64-js/index.js","webpack:///./src/views/modbus/Modbus.vue?9313","webpack:///./src/views/modbus/Modbus.vue?0af6","webpack:///./src/views/modbus/Modbus.vue","webpack:///./src/utils/modbus-command/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///src/views/modbus/Modbus.vue","webpack:///./node_modules/buffer/index.js","webpack:///./src/utils/modbus-command/buffer_bit.js","webpack:///./node_modules/isarray/index.js"],"names":["module","exports","buffer","odd","crc","i","length","j","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","len","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","render","_vm","this","_h","$createElement","_c","_self","_v","staticStyle","attrs","read","scopedSlots","_u","key","fn","scope","on","$event","modRead","row","fun","startAddress","_s","title","write","value","parse","modParse","modbus","staticRenderFns","component","require","Crc16","ModbusCommand","id","_unitID","prototype","setID","readCoils","dataAddress","read_command","readDiscreteInputs","readHoldingRegisters","readInputRegisters","FC","codeLength","buf","Buffer","alloc","writeUInt8","writeUInt16BE","writeUInt16LE","slice","writeCoil","state","writeRegister","val","writeCoils","dataBytes","Math","ceil","writeBit","writeRegisters","checkCrc","command","command_crc","check_crc","equals","result","msg","data","parseFCerr","parseFC2","parseFC4","parseFC5","parseFC6","parseFC16","readUInt8","reg","readUInt16BE","errCode","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","pow","c","rt","abs","isNaN","floor","log","LN2","base64","ieee754","isArray","typedArraySupport","__proto__","foo","subarray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","from","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","fill","encoding","undefined","checked","string","isEncoding","actual","fromArrayLike","array","byteOffset","obj","isBuffer","copy","isnan","type","toString","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","n","bidirectionalIndexOf","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","global","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","apply","inspect","str","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","units","leadSurrogate","byteArray","hi","lo","src","dst","addBufferBitOp","bit","bitOffset","bitMask","byte","readBit"],"mappings":"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","file":"js/chunk-0164c72d.ddaa7c4d.js","sourcesContent":["\"use strict\";\n/**\n * Calculates the buffers CRC16.\n *\n * @param {Buffer} buffer the data buffer.\n * @return {number} the calculated CRC16.\n */\nmodule.exports = function crc16(buffer) {\n    var crc = 0xFFFF;\n    var odd;\n\n    for (var i = 0; i < buffer.length; i++) {\n        crc = crc ^ buffer[i];\n\n        for (var j = 0; j < 8; j++) {\n            odd = crc & 0x0001;\n            crc = crc >> 1;\n            if (odd) {\n                crc = crc ^ 0xA001;\n            }\n        }\n    }\n\n    return crc;\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',[_vm._v(\"生成 Modbus 指令（打开控制台）：\")]),_c('el-table',{staticStyle:{\"margin-top\":\"30px\"},attrs:{\"data\":_vm.read,\"border\":true,\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"title\",\"label\":\"读操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.modRead(scope.row.fun, scope.row.startAddress, scope.row.length)}}},[_vm._v(_vm._s(scope.row.title))])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"startAddress\",\"label\":\"起始地址\"}}),_c('el-table-column',{attrs:{\"prop\":\"length\",\"label\":\"读长度\"}})],1),_c('el-table',{staticStyle:{\"margin-top\":\"30px\"},attrs:{\"data\":_vm.write,\"border\":true,\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"title\",\"label\":\"写操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.modRead(scope.row.fun, scope.row.startAddress, scope.row.value)}}},[_vm._v(_vm._s(scope.row.title))])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"startAddress\",\"label\":\"起始地址\"}}),_c('el-table-column',{attrs:{\"prop\":\"value\",\"label\":\"写入值\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [((scope.row.value instanceof Array))?_c('div',[_c('pre',[_vm._v(_vm._s(scope.row.value))])]):_c('div',[_vm._v(_vm._s(scope.row.value))])]}}])})],1),_c('el-table',{staticStyle:{\"margin-top\":\"30px\"},attrs:{\"data\":_vm.parse,\"border\":true,\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"title\",\"label\":\"解析\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.modParse(scope.row.modbus)}}},[_vm._v(_vm._s(scope.row.title))])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"modbus\",\"label\":\"数据\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('pre',[_vm._v(_vm._s(scope.row.modbus))])]}}])})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Modbus.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Modbus.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Modbus.vue?vue&type=template&id=983ba0ea&\"\nimport script from \"./Modbus.vue?vue&type=script&lang=js&\"\nexport * from \"./Modbus.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\"use strict\";\nrequire(\"./buffer_bit\")();\nconst Crc16 = require('./crc16');\n\n\n/**\n * Modbus 指令 \n * @param {*} id \n */\nconst ModbusCommand = function (id) {\n    // 设备 id\n    this._unitID = 1;\n    if (id) {\n        this._unitID = id;\n    }\n}\n/**\n * 设置 设备ID （设备地址）\n */\nModbusCommand.prototype.setID = function (id) {\n    this._unitID = id;\n}\n\n// ----读取命令------------------------------------------------------------\n\n/**\n * 读线圈 （FC = 1）\n * @param {Number} dataAddress  ; 起始地址\n * @param {Number} length       ; 读取的数据个数\n */\nModbusCommand.prototype.readCoils = function (dataAddress, length) {\n    return this.read_command(1, dataAddress, length);\n}\n\n/**\n * 读离散输入量 （FC = 2）\n * @param {Number} dataAddress  ; 起始地址\n * @param {Number} length       ; 读取的数据个数\n */\nModbusCommand.prototype.readDiscreteInputs = function (dataAddress, length) {\n    return this.read_command(2, dataAddress, length);\n}\n\n/**\n * 读保持寄存器 （FC = 3）\n * @param {Number} dataAddress  ; 起始地址\n * @param {Number} length       ; 读取的数据个数\n */\nModbusCommand.prototype.readHoldingRegisters = function (dataAddress, length) {\n    return this.read_command(3, dataAddress, length);\n}\n\n/**\n * 读输入寄存器 （FC = 4）\n * @param {Number} dataAddress  ; 起始地址\n * @param {Number} length       ; 读取的数据个数\n */\nModbusCommand.prototype.readInputRegisters = function (dataAddress, length) {\n    return this.read_command(4, dataAddress, length);\n}\n\n/**\n * 生成 读信息的 Modbus指令\n * @param {Number} FC         ; 功能码（FC）\n * @param {Number} dataAddress  ; 起始地址\n * @param {Number} length       ; 读取的数据个数\n * \n * @return {Buffer} buf         ; 返回生成的 Modbus 指令 字节流\n */\nModbusCommand.prototype.read_command = function (FC, dataAddress, length) {\n    let codeLength = 6;\n    let buf = Buffer.alloc(codeLength + 2); // 加两个字节的 CRC 校验码\n\n    buf.writeUInt8(this._unitID, 0);\n    buf.writeUInt8(FC, 1);\n    buf.writeUInt16BE(dataAddress, 2);\n    buf.writeUInt16BE(length, 4);\n    // console.log(buf);\n\n    // 添加 CRC 校验码\n    // console.log(Crc16(buf.slice(0, -2)));\n    buf.writeUInt16LE(Crc16(buf.slice(0, -2)), codeLength);\n\n    return buf;\n}\n\n\n\n// ---写入命令----------------------------------------------------------\n\n/**\n * 写入单个线圈 （FC = 5）\n * @param {Number} dataAddress  ; 起始地址\n * @param {Number} state        ; 写入线圈状态 （1/0）\n */\nModbusCommand.prototype.writeCoil = function (dataAddress, state) {\n    let FC = 5; // 功能码\n    let codeLength = 6;\n    let buf = Buffer.alloc(codeLength + 2); // 加两个字节的 CRC 校验码\n\n    buf.writeUInt8(this._unitID, 0);\n    buf.writeUInt8(FC, 1);\n    buf.writeUInt16BE(dataAddress, 2);\n    if (state) {\n        buf.writeUInt16BE(0xff00, 4);\n    } else {\n        buf.writeUInt16BE(0x0000, 4);\n    }\n    // console.log(buf);\n\n    // 添加 CRC 校验码\n    buf.writeUInt16LE(Crc16(buf.slice(0, -2)), codeLength);\n\n    return buf;\n}\n\n/**\n * 写入单个寄存器 （FC = 6）\n * @param {Number} dataAddress  ; 起始地址\n * @param {Number} val          ; 写入寄存器的值\n */\nModbusCommand.prototype.writeRegister = function (dataAddress, val) {\n    let FC = 6; // 功能码\n    let codeLength = 6;\n    let buf = Buffer.alloc(codeLength + 2); // 加两个字节的 CRC 校验码\n\n    buf.writeUInt8(this._unitID, 0);\n    buf.writeUInt8(FC, 1);\n    buf.writeUInt16BE(dataAddress, 2);\n    buf.writeUInt16BE(val, 4);\n    // console.log(buf);\n\n    // 添加 CRC 校验码\n    buf.writeUInt16LE(Crc16(buf.slice(0, -2)), codeLength);\n\n    return buf;\n}\n\n/**\n * 写入多个线圈 （FC = 15）\n * @param {Number} dataAddress  ; 起始地址\n * @param {Number} state        ; 写入线圈的布尔状态数组 [0,1,0,0, 0,0,1,0]\n */\nModbusCommand.prototype.writeCoils = function (dataAddress, arr) {\n    let FC = 15; // 功能码\n    let dataBytes = Math.ceil(arr.length / 8); // 数据字节数\n    let codeLength = 7 + dataBytes;\n    let buf = Buffer.alloc(codeLength + 2); // 加两个字节的 CRC 校验码\n\n    buf.writeUInt8(this._unitID, 0);\n    buf.writeUInt8(FC, 1);\n    buf.writeUInt16BE(dataAddress, 2);\n    buf.writeUInt16BE(arr.length, 4);\n    buf.writeUInt8(dataBytes, 6);\n\n    // clear the data bytes before writing bits data\n    for (let i = 0; i < dataBytes; i++) {\n        buf.writeUInt8(0, 7 + i);\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        // buffer bits are already all zero (0)\n        // only set the ones set to one (1)\n        if (arr[i]) {\n            buf.writeBit(1, i, 7);\n        }\n    }\n\n    // 添加 CRC 校验码\n    buf.writeUInt16LE(Crc16(buf.slice(0, -2)), codeLength);\n\n    return buf;\n}\n\n/**\n * 写入多个寄存器 （FC = 16）\n * @param {Number} dataAddress  ; 起始地址\n * @param {Number} val          ; 写入寄存器值 的数组\n */\nModbusCommand.prototype.writeRegisters = function (dataAddress, arr) {\n    let FC = 16; // 功能码\n    var codeLength = 7 + 2 * arr.length;\n    var buf = Buffer.alloc(codeLength + 2); // 加两个字节的 CRC 校验码\n\n    buf.writeUInt8(this._unitID, 0);\n    buf.writeUInt8(FC, 1);\n    buf.writeUInt16BE(dataAddress, 2);\n    buf.writeUInt16BE(arr.length, 4);\n    buf.writeUInt8(arr.length * 2, 6);\n\n    for (var i = 0; i < arr.length; i++) {\n        buf.writeUInt16BE(arr[i], 7 + 2 * i);\n    }\n    // console.log(buf);\n\n    // 添加 CRC 校验码\n    buf.writeUInt16LE(Crc16(buf.slice(0, -2)), codeLength);\n\n    return buf;\n}\n\n\n// ---解析命令-------------------------------------------------------\n\n/**\n * 验证 Modbus命令 crc 校验码\n * @param {Buffer} command; 需要验证的\n * \n * @return {Boolean}\n */\nModbusCommand.prototype.checkCrc = function (command) {\n    // buffer 中分解出 crc校验码\n    let command_crc = command.slice(-2);\n\n    // 生成 crc 校验码\n    let check_crc = Buffer.alloc(2);\n    check_crc.writeUInt16LE(Crc16(command.slice(0, - 2)), 0);\n\n    // 对比 crc校验码\n    // console.log(command_crc);\n    // console.log(check_crc);\n    // console.log(check_crc.compare(command_crc));\n    // console.log(check_crc.equals(command_crc));\n    return check_crc.equals(command_crc);\n}\n\n\n/**\n * 解析接收到的 modbus 数据\n * @param {Buffer} buffer ;需要解析的 Buffer 对象\n * \n * @return {Object} result ;\n */\nModbusCommand.prototype.parse = function (buffer) {\n    let result = {\n        msg: true,          // Crc 校验状态\n        data: [],           // 解析后的数据\n        buffer: buffer      // 原始 buffer\n    };\n    // 校验 CRC\n    if (!this.checkCrc(buffer)) {\n        result.msg = false;\n        result.data = 'CRC 校验码错误';\n        return result;\n    }\n\n    // 功能码\n    let FC = buffer.slice(1, 2)[0];\n\n    // 判断 是否错误码\n    if (FC > 0x80) {\n        result.msg = false;\n        result.data = this.parseFCerr(buffer);\n        return result;\n    }\n\n    // 解析 数据\n    let data;\n    switch (FC) {\n        // 读取 线圈/离散量输入\n        case 1:\n        case 2:\n            data = this.parseFC2(buffer);\n            break;\n        // 读取 寄存器\n        case 3:\n        case 4:\n            data = this.parseFC4(buffer);\n            break;\n        // 写单个线圈\n        case 5:\n            data = this.parseFC5(buffer);\n            break;\n        // 写单个寄存器\n        case 6:\n            data = this.parseFC6(buffer);\n            break;\n        // 写入多个 \n        case 15:\n        case 16:\n            data = this.parseFC16(buffer);\n            break;\n        default:\n            data = [];\n            break;\n    }\n\n    result.data = data;\n    return result;\n\n}\n\n/**\n * 解析 读 线圈/离散输入 返回的 modbus （FC = 1, FC = 2）\n * @param {Buffer} buffer ;需要解析的 buffer 对象\n * \n * @return {Array} data ; 返回 解析后的数据（起始地址，数值的数组）\n */\nModbusCommand.prototype.parseFC2 = function (buffer) {\n    // 获取 数据字节数\n    var length = buffer.readUInt8(2);\n    var data = [];\n\n    for (let i = 0; i < length; i++) {\n        let reg = buffer[3 + i]; // 从第三个字节开始读\n\n        for (let j = 0; j < 8; j++) {\n            data.push((reg & 1) === 1);\n            reg = reg >> 1;\n        }\n    }\n\n    return data;\n}\n\n/**\n * 解析 读 寄存器 返回的 modbus （FC = 3, FC = 4）\n * @param {Buffer} buffer ;需要解析的 buffer 对象\n * \n * @return {Array} data ; 返回 解析后的数据（起始地址，数值的数组）\n */\nModbusCommand.prototype.parseFC4 = function (buffer) {\n    // 获取 数据字节数\n    var length = buffer.readUInt8(2);\n    var data = [];\n\n    // (i += 2) 每个·寄存器占 两个字节\n    for (let i = 0; i < length; i += 2) {\n        let reg = buffer.readUInt16BE(3 + i); // 从第三个字节开始读\n        data.push(reg);\n    }\n\n    return data;\n}\n\n/**\n * 解析 写 单个线圈 返回的 modbus （FC = 5）\n * @param {Buffer} buffer ;需要解析的 buffer 对象\n * \n * @return {Object} data ; 返回 解析后的数据（起始地址，true/false）\n */\nModbusCommand.prototype.parseFC5 = function (buffer) {\n    var result = this.parseFC6(buffer);\n    result.value = result.value === 0xff00;\n    return result;\n}\n\n/**\n * 解析 写 单个寄存器 返回的 modbus （FC = 6）\n * @param {Buffer} buffer ;需要解析的 buffer 对象\n * \n * @return {Object} data ; 返回 解析后的数据（起始地址，数值）\n */\nModbusCommand.prototype.parseFC6 = function (buffer) {\n    return {\n        dataAddress: buffer.readUInt16BE(2),\n        value: buffer.readUInt16BE(4),\n    };\n}\n\n/**\n * 解析 读 寄存器 返回的 modbus （FC = 3, FC = 4）\n * @param {Buffer} buffer ;需要解析的 buffer 对象\n * \n * @return {Object} data ; 返回 解析后的数据（起始地址，数值的字节数）\n */\nModbusCommand.prototype.parseFC16 = function (buffer) {\n    return {\n        dataAddress: buffer.readUInt16BE(2),\n        value: buffer.readUInt16BE(4),\n    };\n}\n\n/**\n * 解析 返回的 modbus 错误码 （FC = 0x80+beforeFC ）\n * @param {Buffer} buffer ;需要解析的 buffer 对象\n * \n * @return {Array} data ; 返回 解析后的数据（起始地址，数值的字节数）\n */\nModbusCommand.prototype.parseFCerr = function (buffer) {\n    let errCode = buffer.readUInt8(2),\n        data;\n\n    switch (errCode) {\n        case 0x01:\n            data = '非法功能';\n            break;\n        case 0x02:\n            data = '非法数据地址';\n            break;\n        case 0x03:\n            data = '非法数据值';\n            break;\n        case 0x04:\n            data = '从站设备故障';\n            break;\n        case 0x05:\n            data = '确认';\n            break;\n        case 0x06:\n            data = '从属设备忙';\n            break;\n        case 0x08:\n            data = '存储奇偶性差错';\n            break;\n        case 0x0a:\n            data = '不可用网关路径';\n            break;\n        case 0x0b:\n            data = '网关目标设备相应失败';\n            break;\n        default:\n            data = '非法错误';\n            break;\n    }\n\n    return data;\n\n}\n\n\nmodule.exports = ModbusCommand;","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","<template>\n    <div>\n        <div>生成 Modbus 指令（打开控制台）：</div>\n        <el-table :data=\"read\" :border=\"true\" stripe style=\"margin-top: 30px\">\n            <el-table-column prop=\"title\" label=\"读操作\">\n                <template slot-scope=\"scope\">\n                    <el-button\n                        type=\"primary\"\n                        @click=\"modRead(scope.row.fun, scope.row.startAddress, scope.row.length)\"\n                    >{{scope.row.title}}</el-button>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"startAddress\" label=\"起始地址\"></el-table-column>\n            <el-table-column prop=\"length\" label=\"读长度\"></el-table-column>\n        </el-table>\n        <!--  -->\n        <el-table :data=\"write\" :border=\"true\" stripe style=\"margin-top: 30px\">\n            <el-table-column prop=\"title\" label=\"写操作\">\n                <template slot-scope=\"scope\">\n                    <el-button\n                        type=\"primary\"\n                        @click=\"modRead(scope.row.fun, scope.row.startAddress, scope.row.value)\"\n                    >{{scope.row.title}}</el-button>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"startAddress\" label=\"起始地址\"></el-table-column>\n            <el-table-column prop=\"value\" label=\"写入值\">\n                <template slot-scope=\"scope\">\n                    <div v-if=\"(scope.row.value instanceof Array)\"><pre>{{scope.row.value}}</pre></div>\n                    <div v-else>{{scope.row.value}}</div>\n                </template>\n            </el-table-column>\n        </el-table>\n        <!--  -->\n        <el-table :data=\"parse\" :border=\"true\" stripe style=\"margin-top: 30px\">\n            <el-table-column prop=\"title\" label=\"解析\">\n                <template slot-scope=\"scope\">\n                    <el-button\n                        type=\"primary\"\n                        @click=\"modParse(scope.row.modbus)\"\n                    >{{scope.row.title}}</el-button>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"modbus\" label=\"数据\">\n                <template slot-scope=\"scope\"><pre>{{scope.row.modbus}}</pre></template>\n            </el-table-column>\n        </el-table>\n    </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport ModbusCommand from \"@/utils/modbus-command\";\nexport default {\n    name: \"Modbus\",\n    data() {\n        return {\n            modbus: null,\n\n            // 表格\n            read: [\n                {\n                    title: \"读线圈\",\n                    startAddress: 0,\n                    length: 2,\n                    fun: \"readCoils\"\n                },\n                {\n                    title: \"读离散量输入\",\n                    startAddress: 0,\n                    length: 3,\n                    fun: \"readDiscreteInputs\"\n                },\n                {\n                    title: \"读保持寄存器\",\n                    startAddress: 2,\n                    length: 5,\n                    fun: \"readHoldingRegisters\"\n                },\n                {\n                    title: \"读输入寄存器\",\n                    startAddress: 2,\n                    length: 4,\n                    fun: \"readInputRegisters\"\n                }\n            ],\n            write: [\n                {\n                    title: \"写线圈\",\n                    startAddress: 0,\n                    value: 1,\n                    fun: \"writeCoil\"\n                },\n                {\n                    title: \"写寄存器\",\n                    startAddress: 0,\n                    value: 20,\n                    fun: \"writeRegister\"\n                },\n                {\n                    title: \"写多个线圈\",\n                    startAddress: 0,\n                    value: [0,0,1,0, 0,1,0,0, 0,1],\n                    fun: \"writeCoils\"\n                },\n                {\n                    title: \"写多个寄存器\",\n                    startAddress:  2,\n                    value: [10, 20],\n                    fun: \"writeRegisters\"\n                }\n            ],\n            parse: [\n                {\n                    title: \"解析\",\n                    modbus: [0x01, 0x01, 0x02, 0x05, 0x01, 0x07b, 0x6c],\n                },\n                {\n                    title: \"解析\",\n                    modbus: [0x01, 0x03, 0x04, 0x03, 0xe8, 0x02, 0xa1, 0xba, 0x9b],\n                },\n                {\n                    title: \"解析\",\n                    modbus: [0x01, 0x05, 0x00,0x00, 0x00,0x00, 0xcd,0xca],\n                },\n                {\n                    title: \"解析\",\n                    modbus: [0x01, 0x06, 0x00,0x00, 0x00,0xf0, 0x89,0x8e],\n                },\n                {\n                    title: \"解析\",\n                    modbus: [0x01, 0x0f, 0x00, 0x00, 0x00, 0x14, 0x03, 0x24, 0x42, 0x04, 0x21, 0x1d],\n                },\n                {\n                    title: \"解析\",\n                    modbus: [0x01, 0x10, 0x00, 0x00, 0x00, 0x02, 0x04, 0x1a, 0x1f, 0x0c, 0xbd],\n                },\n            ]\n        };\n    },\n    created() {\n        this.modbus = new ModbusCommand();\n        // console.log(modbus);\n        // 读取操作\n\n        // let buffer = modbus.readCoils(0, 2);\n        // let buffer = modbus.readDiscreteInputs(0, 3);\n        // let buffer = modbus.readHoldingRegisters(2, 5);\n        // let buffer = modbus.readInputRegisters(2, 4);\n\n        // 写入操作\n        // let buffer = modbus.writeCoil(0, 1);\n        // let buffer = modbus.writeRegister(0, 20);\n        // let buffer = modbus.writeCoils(0, [0,0,1,0, 0,1,0,0, 0,1,0,0, 0,0,1,0, 0,0,1,0]);\n        // let buffer = modbus.writeRegisters(0, [10, 20]);\n\n        // 解析 数据\n        // let buffer = Buffer.from([0x01, 0x01, 0x02, 0x05, 0x01, 0x07b, 0x6c]);\n        // let buffer = Buffer.from([0x01, 0x03, 0x04, 0x03, 0xe8, 0x02, 0xa1, 0xba, 0x9b]);\n\n        // let buffer = Buffer.from([0x01, 0x05, 0x00,0x00, 0x00,0x00, 0xcd,0xca]);\n        // let buffer = Buffer.from([0x01, 0x06, 0x00,0x00, 0x00,0xf0, 0x89,0x8e]);\n\n        // let buffer = Buffer.from([0x01, 0x0f, 0x00, 0x00, 0x00, 0x14, 0x03, 0x24, 0x42, 0x04, 0x21, 0x1d]);\n        // let buffer = Buffer.from([0x01, 0x10, 0x00, 0x00, 0x00, 0x02, 0x04, 0x1a, 0x1f, 0x0c, 0xbd]);\n\n        // let buffer = Buffer.from([0x01, 0x81, 0x02, 0xc1, 0x91]);\n        // console.log(buffer);\n\n        // 验证 crc 校验码是否正确\n        // let check = modbus.checkCrc(buffer);\n        // console.log(check);\n\n        // 解析 数据\n        // let result = modbus.parse(buffer);\n        // console.log(result);\n    },\n    methods: {\n        modRead(fun, startAddress, length) {\n            let buffer = this.modbus[fun](startAddress, length);\n            console.log(fun, buffer);\n        },\n        modWrite(fun, startAddress, value) {\n            let buffer = this.modbus[fun](startAddress, value);\n            console.log(fun, buffer);\n        },\n        modParse(modbus){\n            let buffer = Buffer.from(modbus);\n            let result = this.modbus.parse(buffer);\n            console.log(result);\n        },\n    }\n};\n</script>\n\n<style>\n</style>\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\"use strict\";\n/**\n * Copyright (c) 2015, Yaacov Zamir <kobi.zamir@gmail.com>\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF  THIS SOFTWARE.\n */\n\n/**\n * Adds Bit Operations to Buffer\n */\nvar addBufferBitOp = function() {\n\n    /**\n     * Add set one bit in a Buffer prototype.\n     *\n     * @param {boolean} value, new state of bit.\n     * @param {number} bit, The bit offset.\n     * @param {number} offset, the byte offset.\n     */\n    Buffer.prototype.writeBit = function(value, bit, offset) {\n        var byteOffset = parseInt(bit / 8 + offset);\n        var bitOffset = bit % 8;\n        var bitMask = 0x1 << bitOffset;\n\n        // get byte from buffer\n        var byte = this.readUInt8(byteOffset);\n\n        // set bit on / off\n        if (value) {\n            byte |= bitMask;\n        } else {\n            byte &= ~bitMask;\n        }\n\n        // set byte to buffer\n        this.writeUInt8(byte, byteOffset);\n    };\n\n    /**\n     * Add get one bit in a Buffer prototype.\n     *\n     * @param {boolean} bit, The bit offset.\n     * @param {number} offset, the byte offset.\n     *\n     * @return {boolean} the state of the bit.\n     */\n    Buffer.prototype.readBit = function(bit, offset) {\n        var byteOffset = parseInt(bit / 8 + offset);\n        var bitOffset = bit % 8;\n        var bitMask = 0x1 << bitOffset;\n\n        // get byte from buffer\n        var byte = this.readUInt8(byteOffset);\n\n        // check bit state\n        return (byte & bitMask) === bitMask;\n    };\n};\n\n/**\n * Buffer Bit operations.\n *\n * @type {addBufferBitOp}\n */\nmodule.exports = addBufferBitOp;\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"],"sourceRoot":""}